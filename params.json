{"name":"Modjs","tagline":"Modern project management and comprehension tool for the web","body":"# Mod - Modern project management and comprehension tool for the web [![Build Status](https://secure.travis-ci.org/modulejs/modjs.png?branch=master)](http://travis-ci.org/modulejs/modjs)\r\n\r\n![screenshot](https://raw.github.com/modulejs/modjs/master/example/screenshot.gif)\r\n\r\n## What is Mod?\r\n\r\nMod is a task-based build tool for the web, it help developers quickly build robust and high-performance web applications.\r\n\r\n## Wiki\r\n* [Project Roadmap](https://github.com/modulejs/modjs/wiki/Roadmap)\r\n* [Mod Plugin List](https://github.com/modulejs/modjs/wiki/Plugins)\r\n* [Real Modfile Example](https://github.com/modulejs/modulejs/blob/master/Modfile)\r\n\r\n## Why another one?\r\n\r\n* More built-in tasks\r\n* More simplicity to use\r\n* Configuration less(even zero), do more\r\n* Business background, community support\r\n\r\n## Features\r\n\r\n* Task-based builds\r\n* Minify everything: JS, CSS, HTML, Images\r\n* Source linting: JS, CSS\r\n* Modular JS for the web: AMD, CMD(will support CommonJS soon)\r\n* CSS import file combination\r\n* HTML conditional comments for target build\r\n* Source stripping, automatically remove debugging code\r\n* Common action: cat, rm, mv, mkdir, cp, hash, pack\r\n* File watcher, trigger custom tasks when file change\r\n* Live Browser Reloads, instantly see changes in your browser\r\n* Image Optimization, reduce JPEG, PNG and GIF file sizes\r\n* Project boilerplate generate\r\n* Built-in Web Server\r\n* Extensible, easily write plugins\r\n* Works on most platforms: Windows, Linux, Mac OS X, Unix...\r\n\r\n## Npm Installation\r\n\r\nMod is installed using [NPM(Node Package Manager)](http://npmjs.org/)\r\n\r\n```shell\r\nnpm install -g modjs\r\n```\r\n\r\n## Built-in Tasks\r\n\r\nMod supports a powerful set of high-level commands:\r\n\r\n```shell\r\n                          __   _\r\n   ____ ___   ____   ____/ /  (_)_____\r\n  / __ `__ \\ / __ \\ / __  /  / // ___/\r\n / / / / / // /_/ // /_/ /  / /(__  )\r\n/_/ /_/ /_/ \\____/ \\__,_/__/ //____/\r\n                        /___/\r\n\r\nUsage: mod COMMAND [ARGS]\r\n\r\nmod cat       # Concatenate the content of files\r\nmod cp        # Copy one or more files to another location\r\nmod mkdir     # Create new folder\r\nmod mv        # Move or rename files or directories\r\nmod rm        # Remove files\r\nmod strip     # Source stripping\r\n\r\nmod min       # Minify js css html image files\r\nmod lint      # Validate js css files\r\nmod build     # Build an optimized version of your app, ready to deploy\r\n\r\nmod create    # Generate a project skeleton include project directory\r\nmod init      # Generate a project skeleton in target directory\r\nmod server    # Start a static web server\r\nmod pack      # Create a tarball with target directory\r\nmod hash      # Rename file with it hash value\r\nmod search    # Search the Github\r\n```\r\n\r\n\r\n## Modfile\r\n\r\nLike Makefile/Rakefile, Modfile is implemented as a NodeJS module：\r\n\r\n```js\r\nmodule.exports = {\r\n    plugins: {\r\n        sprite: \"mod-sprite\",\r\n        datauri: \"mod-datauri\"\r\n    },\r\n\r\n    tasks: {\r\n        \"rm\" : {\r\n            \"target\": \"./dist\"\r\n        },\r\n        \"min\" : {\r\n            \"img\": {\r\n                \"source\": \"./img/*.png\",\r\n                \"dest\": \"./dist/img\"\r\n            },\r\n            \"css\": {\r\n                \"source\": \"./dist/css/*.css\",\r\n                \"dest\": \"./dist/css\"\r\n            },\r\n            \"html\": {\r\n                \"source\": \"*.html\",\r\n                \"dest\": \"./dist/\"\r\n            },\r\n            \"js\": {\r\n                \"source\": \"./dist/js/*.js\",\r\n                \"dest\": \"./dist/js\"\r\n            }\r\n        },\r\n        \"cat\": {\r\n            \"source\":[\"./dist/js/a.js\",\"./dist/js/b.js\"],\r\n            \"dest\":  \"./dist/js/ab.js\"\r\n        },\r\n\r\n        \"watch\" : {\r\n            \"source\": [\"*\"],\r\n            \"tasks\": \"\"\r\n        },\r\n    },\r\n\r\n    targets: {\r\n        dist: \"rm min cat\"\r\n    }\r\n};\r\n```\r\n\r\nThen run 'dist' target:\r\n\r\n```sh\r\nmod dist\r\n```\r\n\r\n## Compression Table\r\n\r\n```sh\r\n| Feature                  | Mod    | Grunt      | Yeoman    |\r\n|--------------------------+--------+------------+-----------|\r\n| Minifier                 | ✓     | ✓         | ✓        |\r\n| Linter                   | ✓     | ✓         | ✓        |\r\n| HTML Conditional Comments| ✓     | ✗         | ✗        |\r\n| CSS Combination          | ✓     | ✗         | ✗        |\r\n| Image Optimization       | ✓     | ✗         | ✓        |\r\n| Source stripper          | ✓     | ✗         | ✗        |\r\n| Modular JS               | ✓     | ✗         | ✗        |\r\n| File Watcher             | ✓     | ✓         | ✓        |\r\n| Live Browser Reloads     | ✓     | ✗         | ✓        |\r\n| Built-in WebServer       | ✓     | ✓         | ✓        |\r\n| Skeletons (Boilerplates) | ✓     | ✓         | ✓        |\r\n| Headless browser Testing | ✗     | ✓         | ✓        |\r\n| Extensible plugins       | ✓     | ✓         | ✓        |\r\n| Cross-platform           | ✓     | ✓         | ✗        |\r\n```\r\n\r\n## Custom Tasks\r\n\r\nIn addition to the built-in tasks, you can create your own tasks:\r\n\r\n### Plugin Example\r\n```js\r\nexports.summary = 'my task';\r\n\r\nexports.usage = '<source> [options]';\r\n\r\nexports.options = {\r\n    \"d\" : {\r\n        alias : 'dest'\r\n        ,default : '<source>'\r\n        ,describe : 'destination file'\r\n    },\r\n\r\n    \"c\" : {\r\n        alias : 'charset'\r\n        ,default : 'utf-8'\r\n        ,describe : 'file encoding type'\r\n    }\r\n};\r\n\r\nexports.run = function (options, callback) {\r\n    var target = options.target;\r\n    // ...\r\n};\r\n```\r\n\r\n### Plugin API\r\n```js\r\nexports.taskName\r\nexports.loadTask()\r\nexports.runTask()\r\n\r\nexports.getArgs()\r\nexports.getConfig()\r\nexports.getTaskConfig()\r\n\r\nexports.log()\r\nexports.error()\r\nexports.warn()\r\nexports.debug()\r\n\r\nexports.file\r\nexports.utils\r\n\r\nexports._\r\nexports.async\r\nexports.request\r\nexports.prompt\r\n```\r\n\r\n## Platform Support\r\n\r\nMod support Windows, OS X, Linux.\r\n\r\n\r\n## Issue Submission\r\n\r\nSubmit a [new issue](https://github.com/modulejs/modjs/issues/new).\r\n\r\n## About\r\n\r\nMod is an open-source project by [Tencent](http://www.tencent.com/en-us/) which builds on top of [Node.js](https://nodejs.org).\r\nWe utilize a number of useful open-source solutions including:\r\n\r\n* UglifyJS\r\n* JSHint\r\n* CleanCSS\r\n* CSSLint\r\n* HTMLMinifiler\r\n* Requirejs\r\n* Twitter Bootstrap\r\n* HTML5 Boilerplate\r\n\r\n## Used by people within\r\n\r\n![qqfind](http://0.web.qstatic.com/webqqpic/pubapps/0/50/images/big.png)\r\n![qqconnect](http://0.web.qstatic.com/webqqpic/pubapps/0/16/images/big.png)\r\n\r\n## License\r\n\r\nMod is released under a [MIT](http://opensource.org/licenses/mit-license.php) license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}