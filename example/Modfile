// QQ Find Project Modfile
// More info: https://github.com/modulejs/modjs/

function getTimestamp(){
    var date = new Date;
    var d = date.getDate();
    var mo = date.getMonth() + 1;
    var y = date.getFullYear();
    var h = date.getHours();
    var mi = date.getMinutes();
    return '' + y  + (mo <= 9 ? '0' + mo : mo)  + (d <= 9 ? '0' + d : d) + (h <= 9 ? '0' + h : h) + (mi <= 9 ? '0' + mi : mi);
}

var TIMESTAMP = getTimestamp();

module.exports = {
    // use loader
    loader: "requirejs",

    // use plugins
    plugins: {
        "sprite": "mod-sprite"
    },

    tasks:{
        // remove files
        rm:{
            clean: {
                target:'dist'
            },
            tmp: {
                target: './css/find.css'
            }
        },

        // compile source
        compile:{
            js: {
                source: "main.js",
                dest: "./dist/js/find.js",
                baseUrl: "./js",
                stubModules: ['tmpl'],
                miniLoader: true
            },
            html_tencent: {
                source: "index_tencent.html",
                dest: "./dist/index_tencent.html",
                target: "dist"
            },
            html_public: {
                source: "index.html",
                dest: "./dist/index.html",
                target: "dist"
            },
            css: {
                source: "./css/main.css",
                dest: "./css/find.css"
            }
        },

        // minify files
        min : {
            js:{
                source: "./dist/js/*.js"
                ,dest: "./dist/js/"
            }
            ,css:{
                source: "./dist/css/*.css"
                ,dest: "./dist/css/"
            }
        },

        // sprite plugin
        sprite: {
            "source": "./css/find.css",                  // required
            // "sourceImageRoot": "./css/slice/",         // optional default source
            "dest": "./dist/css/find.css",               // required
            "destImageRoot": "./sprites/",              // optional relative to  dest path, default "./sprites/"
            "maxSize": 60,                               // optional "kb"
            "margin": 5,                                 // optional default 0
            "prefix": TIMESTAMP + "_sprite_",           // optional
            "igts": true                                 // optional
        },

        // image compression
        optimage: {
            source: "./css/slice/*.png",
            dest: "./css/slice/"
        },

        // code striping
        strip: {
            "source": "./dist/js/*.js",
            "dest": "dist/js/",
            "nodes": ["console", "alert"]
        },

        // copy files
        "cp": {
            "data": {
                "source": "./js/data/*.js",
                "dest": "dist/js/"
            },
            "jquery": {
                "source": "./lib/jquery/",
                "dest": "dist/js/"
            },
            "img": {
                "source": "./img",
                "dest": "dist/img/"
            }
        },

        // replace placeholder
        "replace" : {
            html: {
                "source": "./dist/*.html",
                "dest": "dist/",
                "search" : "@VERSION",
                "replace" : TIMESTAMP
            },
            css: {
                "source": "./dist/css/*.css",
                "dest": "dist/",
                "search" : "@VERSION",
                "replace" : TIMESTAMP
            }

        },

        // build by templating
        "template" : {
            html: {
                "source": "./dist/*.html",
                "dest": "dist/"
            }
        }
    },

    targets:{
        // define the dist target
        dist: "rm:clean mkdir compile optimage sprite cp:data cp:img replace template min cp:jquery rm:tmp"
    }
};